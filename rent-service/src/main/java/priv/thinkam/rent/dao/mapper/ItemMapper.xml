<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.thinkam.rent.dao.mapper.ItemMapper">
  <resultMap id="BaseResultMap" type="priv.thinkam.rent.dao.model.Item">
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="stuff_id" jdbcType="INTEGER" property="stuffId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="rent_day" jdbcType="INTEGER" property="rentDay" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    item_id, user_id, stuff_id, create_time, rent_day, end_time, apply_time, status
  </sql>
  <select id="selectByExample" parameterType="priv.thinkam.rent.dao.model.ItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from item
    where item_id = #{itemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from item
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="priv.thinkam.rent.dao.model.ItemExample">
    delete from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="priv.thinkam.rent.dao.model.Item">
    <selectKey keyProperty="itemId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into item (user_id, stuff_id, create_time, 
      rent_day, end_time, apply_time, 
      status)
    values (#{userId,jdbcType=INTEGER}, #{stuffId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{rentDay,jdbcType=INTEGER}, #{endTime,jdbcType=TIMESTAMP}, #{applyTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="priv.thinkam.rent.dao.model.Item">
    <selectKey keyProperty="itemId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="stuffId != null">
        stuff_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="rentDay != null">
        rent_day,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="stuffId != null">
        #{stuffId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rentDay != null">
        #{rentDay,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="priv.thinkam.rent.dao.model.ItemExample" resultType="java.lang.Long">
    select count(*) from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update item
    <set>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.stuffId != null">
        stuff_id = #{record.stuffId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rentDay != null">
        rent_day = #{record.rentDay,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update item
    set item_id = #{record.itemId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      stuff_id = #{record.stuffId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      rent_day = #{record.rentDay,jdbcType=INTEGER},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="priv.thinkam.rent.dao.model.Item">
    update item
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="stuffId != null">
        stuff_id = #{stuffId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rentDay != null">
        rent_day = #{rentDay,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="priv.thinkam.rent.dao.model.Item">
    update item
    set user_id = #{userId,jdbcType=INTEGER},
      stuff_id = #{stuffId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      rent_day = #{rentDay,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
</mapper>